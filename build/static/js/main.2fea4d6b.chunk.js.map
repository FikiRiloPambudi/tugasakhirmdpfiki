{"version":3,"sources":["Todo.js","Todo2.js","Detail.js","component/CardProfile.js","component/ProfilePage.js","component/LoginPage.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["Todo","useState","data","setData","useEffect","fetch","then","response","json","navigate","useNavigate","map","item","onClick","state","style","backgroundColor","cursor","nama","src","gambar","id","Detail","useLocation","pengertian","CardProfile","nim","prodi","className","color","Profile","ProfilePage","display","flexDirection","justifyContent","alignItems","index","LoginPage","username","setUsername","password","setPassword","fontSize","type","onChange","e","target","value","placeholder","preventDefault","alert","App","path","element","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.2fea4d6b.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Todo() {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    fetch(\"https://my-json-server.typicode.com/FikiRiloPambudi/ta_fiki-api/belajar\")\r\n      .then((response) => response.json())\r\n      .then((json) => setData(json));\r\n  }, []);\r\n  let navigate = useNavigate();\r\n  return (\r\n    <>\r\n      {data.map((item) => (\r\n        <div\r\n          key={item.id}\r\n          onClick={() => navigate(`detail/`, { state: item })}\r\n          style={{ backgroundColor:\"rgb(210, 136, 224)\", cursor: \"pointer\" }}\r\n        >\r\n          <p>{item.nama}</p>\r\n          <img src={item.gambar}></img>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nexport default function Todo() {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    fetch(\"https://my-json-server.typicode.com/FikiRiloPambudi/ta_fiki_api2/belajar\")\r\n      .then((response) => response.json())\r\n      .then((json) => setData(json));\r\n  }, []);\r\n  let navigate = useNavigate();\r\n  return (\r\n    <>\r\n      {data.map((item) => (\r\n        <div\r\n          key={item.id}\r\n          onClick={() => navigate(`detail/`, { state: item })}\r\n          style={{ backgroundColor: \"rgb(105, 218, 238)\", cursor: \"pointer\"}\r\n        \r\n         }\r\n        >\r\n          <p>{item.nama}</p>\r\n          <img src={item.gambar}></img>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}","import { useLocation } from \"react-router-dom\";\r\n\r\nexport default function Detail() {\r\n  const { state } = useLocation();\r\n  return (\r\n    <div>\r\n      <p>{state.nama}</p>\r\n      <img src={state.gambar}></img>\r\n      <p>{state.pengertian}</p>\r\n    </div>\r\n  );\r\n}","import './CardProfile.css'\r\nexport default function CardProfile({nama, nim, prodi}){\r\n\treturn(\r\n\t\t<div className=\"card-profile\">\r\n\t\t\t<div className=\"profile-left\">\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t<div className=\"profile-details\">\r\n\t\t\t\t<h1 style={{color:'white'}}>{nama}</h1>\r\n\t\t\t\t<h2 style={{color:'white'}}>{nim}</h2>\r\n\t\t\t\t<h2 style={{color:'white'}}>{prodi}</h2>\r\n\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t)\r\n}\r\nexport const Profile=[\r\n\t{\r\n\t\t\r\n\t\tnama:'Fiki Rilo Pambudi',\r\n\t\tnim:'21120119120001',\r\n\t\tprodi: 'Teknik komputer',\r\n\t\t\r\n\t},\r\n]","import React from \"react\";\r\nimport { Profile } from \"./CardProfile\";\r\nimport CardProfile from'./CardProfile';\r\nexport default function ProfilePage(){\r\n\treturn (\r\n\t\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay:'flex',\r\n\t\t\tflexDirection:'column',\r\n\t\t\tjustifyContent:'center',\r\n\t\t\talignItems:'center',\r\n\t\t}}>\r\n\t\t\t<h1 style={{color:'white'}}>Profile</h1>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t{Profile.map((item,index)=>(\r\n\t\t\t\t\t\t<CardProfile\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tnama={item.nama}\r\n\t\t\t\t\t\tnim={item.nim}\r\n\t\t\t\t\t\tprodi={item.prodi}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t</div>\r\n\r\n\t)\r\n\t\t\t\t\t}\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport './LoginPage.css';\r\n\r\nfunction LoginPage() {\r\n\tconst navigate = useNavigate();\r\n\tconst [ username, setUsername ] = useState();\r\n\tconst [ password, setPassword ] = useState();\r\n\tconst user = 'fikirilo';\r\n\tconst pwd = '123';\r\n\tfunction getuser(e) {\r\n\t\tsetUsername(e.target.value);\r\n\t}\r\n\tfunction getpass(e) {\r\n\t\tsetPassword(e.target.value);\r\n\t}\r\n\tfunction validation() {\r\n\t\tif (username === user && password === pwd) {\r\n\t\t\tnavigate('/todo');\r\n\t\t} else {\r\n\t\t\talert('Unable to Login');\r\n\t\t}\r\n\t}\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tvalidation();\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1 style={{color: '#686868', fontSize: 40}}>Login</h1>\r\n\t\t\t<div className=\"settingWrapper\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p style={{color: '#686868', fontSize: 20}}>Username</p>\r\n\t\t\t\t\t<div className=\"boxWrapper\">\r\n\t\t\t\t\t\t<input className=\"boxInfo\" type=\"text\" onChange={getuser} placeholder=\"masukan username anda\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p style={{color: '#686868', fontSize: 20}}>Password</p>\r\n\t\t\t\t\t<div className=\"boxWrapper\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName=\"boxInfo\"\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tonChange={getpass}\r\n\t\t\t\t\t\t\tplaceholder=\"masukan password anda\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"saveBtnWrapper\">\r\n\t\t\t\t\t<button className=\"saveBtn\" onClick={onSubmit}>\r\n\t\t\t\t\t\tLOGIN\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default LoginPage;\r\n","import \"./App.css\";\nimport { BrowserRouter, NavLink, Route, Routes, Navigate } from \"react-router-dom\";\nimport Todo from \"./Todo\";\nimport Todo2 from \"./Todo2\";\nimport { HiHome } from \"react-icons/hi\";\nimport { MdGroup } from \"react-icons/md\";\nimport Detail from \"./Detail\";\nimport ProfilePage from \"./component/ProfilePage\";\nimport LoginPage from \"./component/LoginPage\";\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n    <header>\n      <p id=\"titleGroup\">Matematika Ilmu yang Menyenangkan</p>\n      </header>\n      <Routes>\n        <Route path=\"/\" element={<Navigate to=\"/home\" />}></Route>\n        <Route path=\"/home\" element={<LoginPage />}></Route>\n        <Route path=\"/todo\" element={<Todo />}></Route>\n        <Route path=\"/todo2\" element={<Todo2 />}></Route>\n        <Route path=\"/todo/detail\" element={<Detail />}></Route>\n        <Route path=\"/todo2/detail\" element={<Detail />}></Route>\n        <Route path=\"/Profile\" element={<ProfilePage />}></Route>\n      </Routes>\n      <footer>\n\n        <NavLink to=\"/todo\" className=\"iconWrapper\">\n\n          <HiHome className=\"icon\" />\n\n          Matematika Dasar\n\n        </NavLink>\n\n        <NavLink to=\"/profile\" className=\"iconWrapper\">\n\n          <MdGroup className=\"icon\" />\n\n          Profile\n\n        </NavLink>\n\n        <NavLink to=\"/todo2\" className=\"iconWrapper\">\n      \n          <HiHome className=\"icon\" />\n        \n          matematika Terapan\n\n      </NavLink>\n      </footer>\n    </BrowserRouter>\n  );\n}","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorkerRegistration.register();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}